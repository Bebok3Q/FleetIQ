"""Add Telemetry table

Revision ID: f6117fa57d1a
Revises: 8799c04dbec5
Create Date: 2025-08-20 00:17:59.218238

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f6117fa57d1a'
down_revision: Union[str, None] = '8799c04dbec5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('vehicle', 'vin',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('vehicle', 'model',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('vehicle', 'odometer',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               nullable=False,
                postgresql_using='odometer::integer')
    op.alter_column('vehicle', 'year',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               nullable=False,
                postgresql_using='year::integer')
    op.create_unique_constraint(None, 'vehicle', ['vin'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vehicle', type_='unique')
    op.alter_column('vehicle', 'year',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('vehicle', 'odometer',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('vehicle', 'model',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('vehicle', 'vin',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
